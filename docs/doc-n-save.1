.pc
.TH doc-n-save.raku 1 2024-01-22
.SH Doc\-N\-Save 
.SS Table of Contents
.IP \(bu 2m
NAME [#name]
.IP \(bu 2m
AUTHOR [#author]
.IP \(bu 2m
VERSION [#version]
.IP \(bu 2m
TITLE [#title]
.IP \(bu 2m
SUBTITLE [#subtitle]
.IP \(bu 2m
COPYRIGHT [#copyright]
.IP \(bu 2m
Introduction [#introduction]
.RS 2n
.IP \(bu 2m
doc\-n\-save [#doc-n-save-1]
.RE
.RS 2n
.IP \(bu 2m
mk\-raku\-dirs [#mk-raku-dirs]
.RE
.RS 2n
.IP \(bu 2m
release [#release]
.RE
.RS 2n
.IP \(bu 2m
release\-d [#release-d]
.RE
.SH "NAME"
Doc\-N\-Save 
.SH "AUTHOR"
Francis Grizzly Smit (grizzly@smit\&.id\&.au)
.SH "VERSION"
0\&.1\&.11
.SH "TITLE"
Doc\-N\-Save
.SH "SUBTITLE"
A collection of \fBRaku\fR programs for managing modules and apps in \fBRaku\fR, and do things like summit to zef etc\&.
.SH "COPYRIGHT"
GPL V3\&.0+ LICENSE [https://github.com/grizzlysmit/App-Doc-N-Save/blob/main/LICENSE]

Top of Document [#table-of-contents]
.SH Introduction

A collection of \fBRaku\fR programs for managing modules and apps in \fBRaku\fR, and do things like summit to zef etc\&. 
.IP \(bu 2m
doc\-n\-save [#doc-n-save-1] a program for generating Documentation from pod files (files containing pod6 markup) and saving the result to git\&.
.IP \(bu 2m
mk\-raku\-dirs [#mk-raku-dirs] either create a full skeleton repository from a few simple arguments or make sure that an existing repository is complete\&. 
.IP \(bu 2m
release [#release] is a program to send a new release to \fBzef\fR via \fBfez\fR\&.
.IP \(bu 2m
release\-d [#release-d] is a program to send a new release to \fBzef\fR via \fBfez\fR this one solves a bug in \fBfez\fR\&.
.SS doc\-n\-save\&.raku
.SS doc\-n\-save 

.RS 4m
.EX
doc\-n\-save \-\-help
Usage:
  doc\-n\-save [\-c|\-\-comment=<Str>]
  doc\-n\-save create config <name> [<additional\-pod\-files> \&.\&.\&.] [\-l|\-\-lib=<Str>] [\-b|\-\-bin=<Str>] [\-e|\-\-exts=<Str>] [\-d|\-\-docs=<Str>] [\-m|\-\-markdown\-path=<Str>] [\-o|\-\-only\-app] [\-\-separate\-markdown\-files] [\-c|\-\-comment=<Str>]
  doc\-n\-save prompt create config [<name>] [<additional\-pod\-files> \&.\&.\&.] [\-l|\-\-lib=<Str>] [\-b|\-\-bin=<Str>] [\-e|\-\-exts=<Str>] [\-d|\-\-docs=<Str>] [\-m|\-\-markdown\-path=<Str>] [\-o|\-\-only\-app] [\-\-separate\-markdown\-files] [\-c|\-\-comment=<Str>]
  doc\-n\-save explicit <name> [<additional\-pod\-files> \&.\&.\&.] [\-l|\-\-lib=<Str>] [\-b|\-\-bin=<Str>] [\-e|\-\-exts=<Str>] [\-d|\-\-docs=<Str>] [\-m|\-\-markdown\-path=<Str>] [\-o|\-\-only\-app] [\-\-separate\-markdown\-files] [\-c|\-\-comment=<Str>]


.EE
.RE
.P
\fBdoc\-n\-save\fR expects to be run from the root directory of the project\&.
.IP \(bu 2m
Where
.RS 2n
.IP \(bu 2m
The first form \fBdoc\-n\-save [\-c|\-\-comment=<Str>]\fR expects a \fB\&.doc\-n\-save\&.json\fR file to exist in the root directory of the project which is where you run doc\-n\-save from\&. 
.RE
.RS 2n
.RS 2n
.IP \(bu 2m
comment should be a string to override the comment in the \fB\&.doc\-n\-save\&.json\fR file or leave it out to leave that comment in\&.
.RE
.RE
.RS 2n
.IP \(bu 2m
the \fBdoc\-n\-save create config\fR creates a \fB\&.doc\-n\-save\&.json\fR file for the first form to use\&.
.RE
.RS 2n
.IP \(bu 2m
The \fBdoc\-n\-save explicit\fR form takes all the same arguments as the \fBdoc\-n\-save create config\fR form but does the create docs and save them to git without saving the args like the other\&.
.RE

Top of Document [#table-of-contents]
